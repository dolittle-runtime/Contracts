name: Github JavaScript Actions CI

on:
  push:
    branches:
    - '**'
  pull_request:
    types: [closed]

jobs:
  release-context:
    name: Continuous Integration
    runs-on: ubuntu-latest
    outputs:
      should-publish: ${{ steps.context.outputs.should-publish }}
      version: ${{ steps.increment-version.outputs.next-version }}

    steps:
    - uses: actions/checkout@v2
    - name: Establish context
      id: context
      uses: dolittle/establish-context-action@v2 # Replace with ./ if used withing dolittle/establish-context-action

    - name: Increment version
      id: increment-version
      if: ${{ success() && steps.context.outputs.should-publish == 'true' }}
      uses: dolittle/increment-version-action@v2 # Replace with ./ if used withing dolittle/increment-version-action
      with:
        version: ${{ steps.context.outputs.current-version }}
        release-type: ${{ steps.context.outputs.release-type }}

    - name: Create GitHub Release
      if: ${{ success() && steps.context.outputs.should-publish == 'true' }}
      uses: dolittle/github-release-action@v1 # Replace with ./ if used withing dolittle/github-release-action
      with:
        token: ${{  secrets.BUILD_PAT  }}
        cascading-release: ${{ steps.context.outputs.cascading-release }}
        version: ${{ steps.increment-version.outputs.next-version }}

  dot-net:
    name: .Net
    runs-on: ubuntu-latest
    needs: release-context

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel
      - run: dotnet build
      - name: Create packages
        if: ${{ success() && needs.release-context.outputs.should-publish == 'true' }}
        run: dotnet pack --configuration Release -o Artifacts/NuGet /p:PackageVersion=${{ steps.increment-version.outputs.next-version }} -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg
      
      - name: Push NuGet packages
        if: ${{ success() && needs.release-context.outputs.should-publish == 'true' }}
        run: dotnet nuget push Artifacts/NuGet/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

