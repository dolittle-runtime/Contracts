name: Contracts CI/CD

env:
  PRERELEASE_BRANCHES: alpha,beta,rc,projections # Comma separated list of prerelease branch names. 'alpha,rc, ...'

on:
  push:
    branches:
      - "**"
  pull_request:
    types: [closed]

jobs:
  context:
    name: Setup context for release
    runs-on: ubuntu-latest
    outputs:
      should-publish: ${{ steps.context.outputs.should-publish }}
      pr-body: ${{ steps.context.outputs.pr-body }}
      pr-url: ${{ steps.context.outputs.pr-url }}
      version: ${{ steps.increment-version.outputs.next-version }}
      release-type: ${{ steps.context.outputs.release-type }}

    steps:
      - uses: actions/checkout@v2
      - name: Establish context
        id: context
        uses: dolittle/establish-context-action@v2
        with:
          prerelease-branches: ${{ env.PRERELEASE_BRANCHES }}
      - name: Increment version
        id: increment-version
        if: ${{ steps.context.outputs.should-publish == 'true' }}
        uses: dolittle/increment-version-action@v2
        with:
          version: ${{ steps.context.outputs.current-version }}
          release-type: ${{ steps.context.outputs.release-type }}

  dot-net-build:
    name: .Net Build
    runs-on: ubuntu-latest
    needs: context

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"
      - run: dotnet build -c Release

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [dot-net-build, context]
    if: ${{ needs.context.outputs.should-publish == 'true' }}

    steps:
      - uses: actions/checkout@v2
      - name: Prepend to Changelog
        if: ${{ needs.context.outputs.should-publish == 'true' && needs.context.outputs.release-type != 'prerelease' }}
        uses: dolittle/add-to-changelog-action@v2
        with:
          version: ${{ needs.context.outputs.version }}
          body: ${{ needs.context.outputs.pr-body }}
          pr-url: ${{ needs.context.outputs.pr-url }}
          changelog-path: CHANGELOG.md
          user-email: build@dolittle.com
          user-name: dolittle-build
      - name: Create GitHub Release
        uses: dolittle/github-release-action@v2
        with:
          version: ${{ needs.context.outputs.version }}
          body: ${{ needs.context.outputs.pr-body }}

  dot-net-release:
    name: .Net Release
    runs-on: ubuntu-latest
    needs: [context, dot-net-build]
    if: ${{ needs.context.outputs.should-publish == 'true' }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"
      - run: dotnet build
      - name: Create packages
        run: dotnet pack --configuration Release -o Artifacts/NuGet /p:PackageVersion=${{ needs.context.outputs.version }} -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -p:NoDefaultExcludes=true
      - name: Push NuGet packages
        run: dotnet nuget push 'Artifacts/NuGet/*.nupkg' --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  java-script:
    name: JavaScript
    runs-on: ubuntu-latest
    needs: context
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 12.x
        registry-url: 'https://registry.npmjs.org'
    - uses: arduino/setup-protoc@master
      with:
        version: '3.11.2'
    - name: Install dependencies
      working-directory: ./Generation
      run: yarn

    
    - name: Parse semver string
      id: semver_parser
      uses: booxmedialtd/ws-action-parse-semver@v1
      with:
        input_string: ${{ needs.context.outputs.version }}

    - name: Build Fundamentals
      working-directory: ./Generation/Fundamentals/JavaScript
      run: yarn build
    - name: Update Fundamentals version
      working-directory: ./Generation/Fundamentals/JavaScript
      run: npm version ${{ needs.context.outputs.version }}

    # - name: Build Fundamentals - Web
    #   working-directory: ./Generation/Fundamentals/JavaScript.Web
    #   run: yarn build

    - name: Build Runtime
      working-directory: ./Generation/Runtime/JavaScript
      run: yarn build
    - name: Update Runtime version
      working-directory: ./Generation/Runtime/JavaScript
      run: npm version ${{ needs.context.outputs.version }}

    # - name: Build Runtime - Web
    #   working-directory: ./Generation/Runtime/JavaScript.Web
    #   run: yarn build

    - name: Publish Fundamentals
      if: ${{ needs.context.outputs.should-publish == 'true' }}
      working-directory: ./Generation/Fundamentals/JavaScript
      run: npm publish --tag ${{ needs.context.outputs.release-type == 'prerelease' && steps.semver_parser.outputs.prerelease || 'latest' }}
    - name: Publish Runtime
      if: ${{ needs.context.outputs.should-publish == 'true' }}
      working-directory: ./Generation/Runtime/JavaScript
      run: npm publish --tag ${{ needs.context.outputs.release-type == 'prerelease' && steps.semver_parser.outputs.prerelease || 'latest' }}

