// Copyright (c) Dolittle. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

syntax = "proto3";

import "Fundamentals/Protobuf/Uuid.proto";
import "Fundamentals/Services/ReverseCallContext.proto";
import "Runtime/Events.Processing/Filter.proto";
import "Runtime/Events.Processing/Processors.proto";

package dolittle.runtime.events.processing;

option csharp_namespace = "Dolittle.Runtime.Events.Processing.Contracts";

message PartitionedFiltersRegistrationRequest {
    services.ReverseCallArgumentsContext callContext = 1;
    protobuf.Uuid scopeId = 2;
    protobuf.Uuid filterId = 3;
}

message PartitionedFilterResponse {
    services.ReverseCallResponseContext callContext = 1;
    bool isIncluded = 2;
    protobuf.Uuid partitionId = 3;
    ProcessorFailure failure = 4;
}

message PartitionedFiltersClientToRuntimeMessage {
    oneof Message {
        PartitionedFiltersRegistrationRequest registrationRequest = 1;
        PartitionedFilterResponse filterResult = 2;
    }
}

service PartitionedFilters {
    rpc Connect(stream PartitionedFiltersClientToRuntimeMessage) returns(stream FilterRuntimeToClientMessage);
}