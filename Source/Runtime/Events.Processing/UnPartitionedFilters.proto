// Copyright (c) Dolittle. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

syntax = "proto3";

import "Fundamentals/Protobuf/Uuid.proto";
import "Fundamentals/Services/ReverseCallContext.proto";
import "Runtime/Events.Processing/Filter.proto";
import "Runtime/Events.Processing/Processors.proto";

package dolittle.runtime.events.processing;

option csharp_namespace = "Dolittle.Runtime.Events.Processing.Contracts";

message UnPartitionedFiltersRegistrationRequest {
    services.ReverseCallArgumentsContext callContext = 1;
    protobuf.Uuid scopeId = 2;
    protobuf.Uuid filterId = 3;
}

message UnPartitionedFilterResponse {
    services.ReverseCallResponseContext callContext = 1;
    bool isIncluded = 2;
    ProcessorFailure failure = 3;
}

message UnPartitionedFiltersClientToRuntimeMessage {
    oneof Message {
        UnPartitionedFiltersRegistrationRequest registrationRequest = 1;
        UnPartitionedFilterResponse filterResult = 2;
    }
}

service UnPartitionedFilters {
    rpc Connect(stream UnPartitionedFiltersClientToRuntimeMessage) returns(stream FilterRuntimeToClientMessage);
}