// GENERATED CODE -- DO NOT EDIT!
// Original file comments:
// Copyright (c) Dolittle. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.
//
'use strict';
var grpc = require('grpc');
var Heads_Heads_pb = require('../Heads/Heads_pb.js');
var Heads_HeadInfo_pb = require('../Heads/HeadInfo_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
function serialize_dolittle_runtime_heads_HeadInfo(arg) {
    if (!(arg instanceof Heads_HeadInfo_pb.HeadInfo)) {
        throw new Error('Expected argument of type dolittle.runtime.heads.HeadInfo');
    }
    return Buffer.from(arg.serializeBinary());
}
function deserialize_dolittle_runtime_heads_HeadInfo(buffer_arg) {
    return Heads_HeadInfo_pb.HeadInfo.deserializeBinary(new Uint8Array(buffer_arg));
}
function serialize_google_protobuf_Empty(arg) {
    if (!(arg instanceof google_protobuf_empty_pb.Empty)) {
        throw new Error('Expected argument of type google.protobuf.Empty');
    }
    return Buffer.from(arg.serializeBinary());
}
function deserialize_google_protobuf_Empty(buffer_arg) {
    return google_protobuf_empty_pb.Empty.deserializeBinary(new Uint8Array(buffer_arg));
}
// Represents the Head service
var HeadsService = exports.HeadsService = {
    connect: {
        path: '/dolittle.runtime.heads.Heads/Connect',
        requestStream: false,
        responseStream: true,
        requestType: Heads_HeadInfo_pb.HeadInfo,
        responseType: google_protobuf_empty_pb.Empty,
        requestSerialize: serialize_dolittle_runtime_heads_HeadInfo,
        requestDeserialize: deserialize_dolittle_runtime_heads_HeadInfo,
        responseSerialize: serialize_google_protobuf_Empty,
        responseDeserialize: deserialize_google_protobuf_Empty,
    },
};
exports.HeadsClient = grpc.makeGenericClientConstructor(HeadsService);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGVhZHNfZ3JwY19wYi5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsiSGVhZHMvSGVhZHNfZ3JwY19wYi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQ0FBaUM7QUFFakMsMEJBQTBCO0FBQzFCLCtDQUErQztBQUMvQyxxR0FBcUc7QUFDckcsRUFBRTtBQUNGLFlBQVksQ0FBQztBQUNiLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUMzQixJQUFJLGNBQWMsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQztBQUNyRCxJQUFJLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0FBQzNELElBQUksd0JBQXdCLEdBQUcsT0FBTyxDQUFDLDZDQUE2QyxDQUFDLENBQUM7QUFFdEYsU0FBUyx5Q0FBeUMsQ0FBQyxHQUFHO0lBQ3BELElBQUksQ0FBQyxDQUFDLEdBQUcsWUFBWSxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsRUFBRTtRQUNoRCxNQUFNLElBQUksS0FBSyxDQUFDLDJEQUEyRCxDQUFDLENBQUM7S0FDOUU7SUFDRCxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUM7QUFDNUMsQ0FBQztBQUVELFNBQVMsMkNBQTJDLENBQUMsVUFBVTtJQUM3RCxPQUFPLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0FBQ2xGLENBQUM7QUFFRCxTQUFTLCtCQUErQixDQUFDLEdBQUc7SUFDMUMsSUFBSSxDQUFDLENBQUMsR0FBRyxZQUFZLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3BELE1BQU0sSUFBSSxLQUFLLENBQUMsaURBQWlELENBQUMsQ0FBQztLQUNwRTtJQUNELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQztBQUM1QyxDQUFDO0FBRUQsU0FBUyxpQ0FBaUMsQ0FBQyxVQUFVO0lBQ25ELE9BQU8sd0JBQXdCLENBQUMsS0FBSyxDQUFDLGlCQUFpQixDQUFDLElBQUksVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFDdEYsQ0FBQztBQUdELDhCQUE4QjtBQUM5QixJQUFJLFlBQVksR0FBRyxPQUFPLENBQUMsWUFBWSxHQUFHO0lBQ3hDLE9BQU8sRUFBRTtRQUNQLElBQUksRUFBRSx1Q0FBdUM7UUFDN0MsYUFBYSxFQUFFLEtBQUs7UUFDcEIsY0FBYyxFQUFFLElBQUk7UUFDcEIsV0FBVyxFQUFFLGlCQUFpQixDQUFDLFFBQVE7UUFDdkMsWUFBWSxFQUFFLHdCQUF3QixDQUFDLEtBQUs7UUFDNUMsZ0JBQWdCLEVBQUUseUNBQXlDO1FBQzNELGtCQUFrQixFQUFFLDJDQUEyQztRQUMvRCxpQkFBaUIsRUFBRSwrQkFBK0I7UUFDbEQsbUJBQW1CLEVBQUUsaUNBQWlDO0tBQ3ZEO0NBQ0YsQ0FBQztBQUVGLE9BQU8sQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLDRCQUE0QixDQUFDLFlBQVksQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gR0VORVJBVEVEIENPREUgLS0gRE8gTk9UIEVESVQhXG5cbi8vIE9yaWdpbmFsIGZpbGUgY29tbWVudHM6XG4vLyBDb3B5cmlnaHQgKGMpIERvbGl0dGxlLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLiBTZWUgTElDRU5TRSBmaWxlIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbi5cbi8vXG4ndXNlIHN0cmljdCc7XG52YXIgZ3JwYyA9IHJlcXVpcmUoJ2dycGMnKTtcbnZhciBIZWFkc19IZWFkc19wYiA9IHJlcXVpcmUoJy4uL0hlYWRzL0hlYWRzX3BiLmpzJyk7XG52YXIgSGVhZHNfSGVhZEluZm9fcGIgPSByZXF1aXJlKCcuLi9IZWFkcy9IZWFkSW5mb19wYi5qcycpO1xudmFyIGdvb2dsZV9wcm90b2J1Zl9lbXB0eV9wYiA9IHJlcXVpcmUoJ2dvb2dsZS1wcm90b2J1Zi9nb29nbGUvcHJvdG9idWYvZW1wdHlfcGIuanMnKTtcblxuZnVuY3Rpb24gc2VyaWFsaXplX2RvbGl0dGxlX3J1bnRpbWVfaGVhZHNfSGVhZEluZm8oYXJnKSB7XG4gIGlmICghKGFyZyBpbnN0YW5jZW9mIEhlYWRzX0hlYWRJbmZvX3BiLkhlYWRJbmZvKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgYXJndW1lbnQgb2YgdHlwZSBkb2xpdHRsZS5ydW50aW1lLmhlYWRzLkhlYWRJbmZvJyk7XG4gIH1cbiAgcmV0dXJuIEJ1ZmZlci5mcm9tKGFyZy5zZXJpYWxpemVCaW5hcnkoKSk7XG59XG5cbmZ1bmN0aW9uIGRlc2VyaWFsaXplX2RvbGl0dGxlX3J1bnRpbWVfaGVhZHNfSGVhZEluZm8oYnVmZmVyX2FyZykge1xuICByZXR1cm4gSGVhZHNfSGVhZEluZm9fcGIuSGVhZEluZm8uZGVzZXJpYWxpemVCaW5hcnkobmV3IFVpbnQ4QXJyYXkoYnVmZmVyX2FyZykpO1xufVxuXG5mdW5jdGlvbiBzZXJpYWxpemVfZ29vZ2xlX3Byb3RvYnVmX0VtcHR5KGFyZykge1xuICBpZiAoIShhcmcgaW5zdGFuY2VvZiBnb29nbGVfcHJvdG9idWZfZW1wdHlfcGIuRW1wdHkpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBhcmd1bWVudCBvZiB0eXBlIGdvb2dsZS5wcm90b2J1Zi5FbXB0eScpO1xuICB9XG4gIHJldHVybiBCdWZmZXIuZnJvbShhcmcuc2VyaWFsaXplQmluYXJ5KCkpO1xufVxuXG5mdW5jdGlvbiBkZXNlcmlhbGl6ZV9nb29nbGVfcHJvdG9idWZfRW1wdHkoYnVmZmVyX2FyZykge1xuICByZXR1cm4gZ29vZ2xlX3Byb3RvYnVmX2VtcHR5X3BiLkVtcHR5LmRlc2VyaWFsaXplQmluYXJ5KG5ldyBVaW50OEFycmF5KGJ1ZmZlcl9hcmcpKTtcbn1cblxuXG4vLyBSZXByZXNlbnRzIHRoZSBIZWFkIHNlcnZpY2VcbnZhciBIZWFkc1NlcnZpY2UgPSBleHBvcnRzLkhlYWRzU2VydmljZSA9IHtcbiAgY29ubmVjdDoge1xuICAgIHBhdGg6ICcvZG9saXR0bGUucnVudGltZS5oZWFkcy5IZWFkcy9Db25uZWN0JyxcbiAgICByZXF1ZXN0U3RyZWFtOiBmYWxzZSxcbiAgICByZXNwb25zZVN0cmVhbTogdHJ1ZSxcbiAgICByZXF1ZXN0VHlwZTogSGVhZHNfSGVhZEluZm9fcGIuSGVhZEluZm8sXG4gICAgcmVzcG9uc2VUeXBlOiBnb29nbGVfcHJvdG9idWZfZW1wdHlfcGIuRW1wdHksXG4gICAgcmVxdWVzdFNlcmlhbGl6ZTogc2VyaWFsaXplX2RvbGl0dGxlX3J1bnRpbWVfaGVhZHNfSGVhZEluZm8sXG4gICAgcmVxdWVzdERlc2VyaWFsaXplOiBkZXNlcmlhbGl6ZV9kb2xpdHRsZV9ydW50aW1lX2hlYWRzX0hlYWRJbmZvLFxuICAgIHJlc3BvbnNlU2VyaWFsaXplOiBzZXJpYWxpemVfZ29vZ2xlX3Byb3RvYnVmX0VtcHR5LFxuICAgIHJlc3BvbnNlRGVzZXJpYWxpemU6IGRlc2VyaWFsaXplX2dvb2dsZV9wcm90b2J1Zl9FbXB0eSxcbiAgfSxcbn07XG5cbmV4cG9ydHMuSGVhZHNDbGllbnQgPSBncnBjLm1ha2VHZW5lcmljQ2xpZW50Q29uc3RydWN0b3IoSGVhZHNTZXJ2aWNlKTtcbiJdfQ==